services:
  notes:
    container_name: notes-fsopen
    profiles: ["notes"]
    build:
      context: ./notes
    depends_on:
      - notesb
    networks:
      - mynetwork
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
    restart: always

  notesb:
    container_name: notesb-fsopen
    profiles: ["notes"]
    build:
      context: ./notes-backend
    depends_on:
      - mongo
    networks:
      - mynetwork
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      MONGODB_URI: mongodb://${mongou:-root}:${mongop:-changeme}@${vmip:-localhost}:8000/noteApp?authSource=admin
    restart: always

  phonebook:
    container_name: phonebook-fsopen
    profiles: ["phonebook"]
    build:
      context: ./phonebook
    depends_on:
      - phonebookb
    networks:
      - mynetwork
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
    restart: always

  phonebookb:
    container_name: phonebookb-fsopen
    profiles: ["phonebook"]
    build:
      context: ./phonebook-backend
    depends_on:
      - mongo
    networks:
      - mynetwork
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      MONGODB_URI: mongodb://${mongou:-root}:${mongop:-changeme}@${vmip:-localhost}:8000/phonebook?authSource=admin
    restart: always

  notesn:
    container_name: notesn-fsopen
    profiles: ["notes"]
    image: nginx:latest
    depends_on:
      - notes
      - notesb
    networks:
      - mynetwork
    ports:
      - "80:80"
    volumes:
      - ./notes-nginx.conf:/etc/nginx/conf.d/default.conf

  phonebookn:
    container_name: phonebookn-fsopen
    profiles: ["phonebook"]
    image: nginx:latest
    depends_on:
      - phonebook
      - phonebookb
    networks:
      - mynetwork
    ports:
      - "80:80"
    volumes:
      - ./phonebook-nginx.conf:/etc/nginx/conf.d/default.conf

  mongo:
    container_name: mongo-fsopen
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${mongou:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${mongop:-changeme}
    volumes:
      - mongo_data:/data/db
    ports:
      - "8000:27017"
    networks:
      - mynetwork
    restart: always

networks:
  mynetwork:
    driver: bridge

volumes:
  mongo_data:
